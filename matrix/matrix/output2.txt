copy of matrix1:
1 1 1 
1 0 0 
1 0 1 

copy of matrix1:
1 1 1 
1 0 0 
1 0 1 

copy of matrix2:
1 1 1 
1 0 0 
1 0 1 

matrix1 after std::swap(matrix1, matrix2):
1 1 1 
1 0 0 
1 0 1 

matrix1 after matrix1.Swap(matrix2):
1 1 1 
1 0 0 
1 0 1 

Testing iterators:

Nonzero matrix1's elements (using Iterator):
row0 column0: 1
row0 column1: 1
row0 column2: 1
row1 column0: 1
row2 column0: 1
row2 column2: 1

Nonzero matrix1's elements (using ConstIterator):
row0 column0: 1
row0 column1: 1
row0 column2: 1
row1 column0: 1
row2 column0: 1
row2 column2: 1

Iterator matrix1.Begin() value: 1
ConstIterator matrix1.Begin() value: 1
Iterator matrix1.Begin() -> ConstIterator (using =) value: 1
Iterator matrix1.Begin() -> ConstIterator (using copy construtor) value: 1

matrix1.Begin() == matrix1.End(): 0
matrix1.Begin() != matrix1.End(): 1
matrix1.Begin() == matrix1.End(): 0
matrix1.Begin() != matrix1.End(): 1
matrix1.Begin() == matrix1.Begin(): 1
matrix1.End() != matrix1.End(): 0

Testing comparison:

matrix1 < matrix2: 0
matrix1 == matrix2: 1
matrix1 != matrix2: 0
matrix1 <= matrix2: 1
matrix1 > matrix2: 0
matrix1 >= matrix2: 1

Testing arithmetic:

-matrix1:
-1 -1 -1 
-1 0 0 
-1 0 -1 

matrix1 + matrix2:
2 2 2 
2 0 0 
2 0 2 

matrix1 - matrix2:
0 0 0 
0 0 0 
0 0 0 

matrix1 * matrix2:
3 1 2 
1 1 1 
2 1 2 

matrix2 * matrix1:
3 1 2 
1 1 1 
2 1 2 

matrix1 += matrix2:
2 2 2 
2 0 0 
2 0 2 

matrix1 -= matrix2:
1 1 1 
1 0 0 
1 0 1 

matrix3 *= matrix1:
3 1 2 
1 1 1 
2 1 2 

factor: -7

matrix1 * factor:
-7 -7 -7 
-7 0 0 
-7 0 -7 

factor * matrix1:
-7 -7 -7 
-7 0 0 
-7 0 -7 

matrix1 *= factor:
-7 -7 -7 
-7 0 0 
-7 0 -7 

transpose matrix2:
1 1 1 
1 0 0 
1 0 1 

transpose matrix2:
1 1 1 
1 0 0 
1 0 1 

inverse matrix2:
0 1 0 
1 0 -1 
0 -1 1 

